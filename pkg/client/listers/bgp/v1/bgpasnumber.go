/*
Copyright 2018 The Voyager Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// This file was automatically generated by lister-gen

package v1

import (
	v1 "snaproute-operator/pkg/apis/bgp/v1"

	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// BGPAsNumberLister helps list BGPAsNumbers.
type BGPAsNumberLister interface {
	// List lists all BGPAsNumbers in the indexer.
	List(selector labels.Selector) (ret []*v1.BGPAsNumber, err error)
	// BGPAsNumbers returns an object that can list and get BGPAsNumbers.
	BGPAsNumbers(namespace string) BGPAsNumberNamespaceLister
	BGPAsNumberListerExpansion
}

// bGPAsNumberLister implements the BGPAsNumberLister interface.
type bGPAsNumberLister struct {
	indexer cache.Indexer
}

// NewBGPAsNumberLister returns a new BGPAsNumberLister.
func NewBGPAsNumberLister(indexer cache.Indexer) BGPAsNumberLister {
	return &bGPAsNumberLister{indexer: indexer}
}

// List lists all BGPAsNumbers in the indexer.
func (s *bGPAsNumberLister) List(selector labels.Selector) (ret []*v1.BGPAsNumber, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.BGPAsNumber))
	})
	return ret, err
}

// BGPAsNumbers returns an object that can list and get BGPAsNumbers.
func (s *bGPAsNumberLister) BGPAsNumbers(namespace string) BGPAsNumberNamespaceLister {
	return bGPAsNumberNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// BGPAsNumberNamespaceLister helps list and get BGPAsNumbers.
type BGPAsNumberNamespaceLister interface {
	// List lists all BGPAsNumbers in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1.BGPAsNumber, err error)
	// Get retrieves the BGPAsNumber from the indexer for a given namespace and name.
	Get(name string) (*v1.BGPAsNumber, error)
	BGPAsNumberNamespaceListerExpansion
}

// bGPAsNumberNamespaceLister implements the BGPAsNumberNamespaceLister
// interface.
type bGPAsNumberNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all BGPAsNumbers in the indexer for a given namespace.
func (s bGPAsNumberNamespaceLister) List(selector labels.Selector) (ret []*v1.BGPAsNumber, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.BGPAsNumber))
	})
	return ret, err
}

// Get retrieves the BGPAsNumber from the indexer for a given namespace and name.
func (s bGPAsNumberNamespaceLister) Get(name string) (*v1.BGPAsNumber, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1.Resource("bgpasnumber"), name)
	}
	return obj.(*v1.BGPAsNumber), nil
}
