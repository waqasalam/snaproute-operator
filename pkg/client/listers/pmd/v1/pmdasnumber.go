/*
Copyright 2018 The Voyager Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// This file was automatically generated by lister-gen

package v1

import (
	v1 "snaproute-operator/pkg/apis/pmd/v1"

	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// PMDAsNumberLister helps list PMDAsNumbers.
type PMDAsNumberLister interface {
	// List lists all PMDAsNumbers in the indexer.
	List(selector labels.Selector) (ret []*v1.PMDAsNumber, err error)
	// PMDAsNumbers returns an object that can list and get PMDAsNumbers.
	PMDAsNumbers(namespace string) PMDAsNumberNamespaceLister
	PMDAsNumberListerExpansion
}

// pMDAsNumberLister implements the PMDAsNumberLister interface.
type pMDAsNumberLister struct {
	indexer cache.Indexer
}

// NewPMDAsNumberLister returns a new PMDAsNumberLister.
func NewPMDAsNumberLister(indexer cache.Indexer) PMDAsNumberLister {
	return &pMDAsNumberLister{indexer: indexer}
}

// List lists all PMDAsNumbers in the indexer.
func (s *pMDAsNumberLister) List(selector labels.Selector) (ret []*v1.PMDAsNumber, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.PMDAsNumber))
	})
	return ret, err
}

// PMDAsNumbers returns an object that can list and get PMDAsNumbers.
func (s *pMDAsNumberLister) PMDAsNumbers(namespace string) PMDAsNumberNamespaceLister {
	return pMDAsNumberNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// PMDAsNumberNamespaceLister helps list and get PMDAsNumbers.
type PMDAsNumberNamespaceLister interface {
	// List lists all PMDAsNumbers in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1.PMDAsNumber, err error)
	// Get retrieves the PMDAsNumber from the indexer for a given namespace and name.
	Get(name string) (*v1.PMDAsNumber, error)
	PMDAsNumberNamespaceListerExpansion
}

// pMDAsNumberNamespaceLister implements the PMDAsNumberNamespaceLister
// interface.
type pMDAsNumberNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all PMDAsNumbers in the indexer for a given namespace.
func (s pMDAsNumberNamespaceLister) List(selector labels.Selector) (ret []*v1.PMDAsNumber, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.PMDAsNumber))
	})
	return ret, err
}

// Get retrieves the PMDAsNumber from the indexer for a given namespace and name.
func (s pMDAsNumberNamespaceLister) Get(name string) (*v1.PMDAsNumber, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1.Resource("pmdasnumber"), name)
	}
	return obj.(*v1.PMDAsNumber), nil
}
